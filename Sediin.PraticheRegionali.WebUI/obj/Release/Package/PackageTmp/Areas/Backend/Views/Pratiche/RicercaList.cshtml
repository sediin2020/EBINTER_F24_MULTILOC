@model Sediin.PraticheRegionali.WebUI.Areas.Backend.Models.PraticheAziendaRicercaViewModel
@using Sediin.PraticheRegionali.DOM
@using Sediin.PraticheRegionali.WebUI

@if (Model.TotalRecords == 0)
{
    @Html.AlertDanger("Nessuna Pratica trovata");
    return;
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="text-center bg-dark text-white">
                    <th>Stato</th>
                    <th>Tipo Richiesta</th>
                    <th>Rimborso</th>
                    <th>Data inserimento</th>
                    <th>Data invio</th>
                    <th style="width:125px"></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.Result.ToList())
                {
                    <tr>
                        <td class="text-center" style="width:150px">
                            <h5>
                                <label class="badge bg-@Html.GetRichiestaStatoCss(item.StatoPraticaId) text-start">
                                    @if (item.StatoPratica != null)
                                    {
                                        @item.StatoPratica.Descrizione
                                    }

                                </label>

                            </h5>
                        </td>
                        <td>
                            @if (!User.IsInRole(IdentityHelper.Roles.Azienda.ToString()) && !User.IsInRole(IdentityHelper.Roles.Dipendente.ToString()))
                            {
                                if (item.TipoRichiesta.IsTipoRichiestaDipendente == true)
                                {
                                    <label class="badge bg-1">
                                        Prestazioni Regionali Dipendenti
                                    </label>
                                }
                                else
                                {
                                    <label class="badge bg-2">
                                        Prestazioni Regionali Aziende
                                    </label>
                                }
                                <br />

                            }

                            @if (item.TipoRichiesta != null)
                            {
                                <div>
                                    <h5 class="mt-1">
                                        @Html.Raw($"{item.TipoRichiesta.Descrizione} - {item.TipoRichiesta.Modulo} ({item.TipoRichiesta.Anno})")
                                    </h5>
                                </div>
                            }


                            @if (!string.IsNullOrWhiteSpace(item.ProtocolloId))
                            {
                                <div>
                                    <strong class="mr-2">Protocollo:</strong>
                                    <span>@item.ProtocolloId</span>
                                </div>
                            }

                            @if (item.TipoRichiesta.IsTipoRichiestaDipendente == true)
                            {
                                <div>
                                    <strong class="mr-2">Dipendente:</strong>
                                    @if (item.Dipendente != null)
                                    {
                                        @Html.Raw($"{item.Dipendente.Nome} {item.Dipendente.Cognome} - {item.Dipendente.CodiceFiscale?.ToUpper()}");
                                    }
                                </div>
                            }

                            <div>
                                <strong class="mr-2">Ragione sociale:</strong>

                                @if (item.Azienda != null)
                                {
                                    @item.Azienda.RagioneSociale <span> - </span>@item.Azienda.MatricolaInps

                                    if (item.Azienda.Copertura == null || item.Azienda.Copertura.Count() == 0 || item.Azienda.Copertura.FirstOrDefault()?.Coperto == false)
                                    {
                                        <br />
                                        <i class="fas fa-exclamation-triangle mr-3 text-danger"></i><strong class="text-danger">L'azienda non risulta in regola con i contributi</strong>
                                    }

                                }


                            </div>

                            @if (item.Sportello != null)
                            {
                                <div>
                                    <strong class="mr-2">Consulente:</strong>

                                    @Html.Raw($"{item.Sportello.Nome} {item.Sportello.Cognome} - {item.Sportello.CodiceFiscalePIva?.ToUpper()}");

                                </div>
                            }

                        </td>

                        <td>
                            @if (item.StatoPraticaId == (int)SediinPraticheRegionaliEnums.StatoPratica.Confermata)
                            {
                                //_importoRiconoscitoNetto += item.ImportoContributoNetto.GetValueOrDefault();
                                //_importoRiconoscito += item.ImportoContributo.GetValueOrDefault();
                                //_irpef += item.ImportoIRPEF.GetValueOrDefault();

                                <div class="text-end fw-bold">
                                    @item.ImportoContributoNetto.GetValueOrDefault().ToString("n")
                                    @if (item.LiquidazionePraticheRegionali.Count() > 0)
                                    {
                                        var _liquidata = item.LiquidazionePraticheRegionali.Where(x => x.Liquidazione.StatoLiquidazioneId == (int)SediinPraticheRegionaliEnums.StatoLiqidazione.Liquidata);
                                        var _inliquidazione = item.LiquidazionePraticheRegionali.Where(x => x.Liquidazione.StatoLiquidazioneId == (int)SediinPraticheRegionaliEnums.StatoLiqidazione.InLiquidazione);

                                        if (_liquidata.Count() > 0)
                                        {

                                            <br />
                                            <small class="text-end text-@Html.GetLiquidazioneStatoCss((int)SediinPraticheRegionaliEnums.StatoLiqidazione.Liquidata)">Liquidata @Html.ToShortDate(_liquidata.LastOrDefault().Liquidazione.DataLavorazione)</small>
                                        }
                                        else if (_inliquidazione.Count() > 0)
                                        {
                                            <br />
                                            <small class="text-end text-@Html.GetLiquidazioneStatoCss((int)SediinPraticheRegionaliEnums.StatoLiqidazione.InLiquidazione)">In Liquidazione</small>
                                        }
                                        else
                                        {
                                            <br />
                                            <small class="text-end text-info">Da Liquidare</small>
                                        }
                                    }
                                    else
                                    {
                                        <br />
                                        <small class="text-end text-info">Da Liquidare</small>

                                    }
                                </div>


                            }
                            else
                            {
                                if (item.StatoPraticaId == (int)SediinPraticheRegionaliEnums.StatoPratica.Annullata)
                                {
                                    <div class="text-end">
                                        -
                                    </div>
                                }
                                else
                                {
                                    <div class="text-center text-info">
                                        <small>dopo la approvazione della richiesta</small>
                                    </div>
                                }
                            }
                        </td>
                        <td class="text-center">@Html.ToShortDate(item.DataInserimento)</td>
                        <td class="text-center">
                            @Html.ToShortDate(item.DataInvio)
                            @if (item.DataInvio.HasValue && User.IsInRole(IdentityHelper.Roles.Admin.ToString()) ||
                                 item.DataInvio.HasValue && User.IsInRole(IdentityHelper.Roles.Super.ToString()))
                                {
                                    <br /><small>ora: @item.DataInvio.GetValueOrDefault().ToShortTimeString()</small>
                                }
                            </td>
                        <td class="text-center">

                            @Ajax.EncodedAjaxActionLink("Apri Richiesta", "ApriRichiesta", "Pratiche", new
                            {
                                id = item.PraticheRegionaliImpreseId
                            }, new AjaxOptions
                            {
                                OnBegin = "alertWaid()",
                                OnSuccess = "onSuccessApriRichiesta",
                                OnFailure = "handleError"
                            }, new { @class = "btn btn-sm btn-primary" })


                        </td>

                    </tr>
                }

            </tbody>

            <tfoot>
                <tr class="fw-bold">
                    <td colspan="2" class="text-end">Totale rimborso</td>
                    <td class="text-end text-primary doubleunderline">@Model.ImportoRiconoscitoNetto.GetValueOrDefault().ToString("n")</td>
                    <td colspan="2"></td>
                </tr>
                <tr class="fw-bold">
                    <td colspan="2" class="text-end">Totale Importo Liquidato</td>
                    <td class="text-end text-@Html.GetLiquidazioneStatoCss((int)SediinPraticheRegionaliEnums.StatoLiqidazione.Liquidata) doubleunderline">@Model.ImportoLiquidato.GetValueOrDefault().ToString("n")</td>
                    <td colspan="2"></td>
                </tr>
                <tr class="fw-bold">
                    <td colspan="2" class="text-end">Totale Importo in Liquidazione</td>
                    <td class="text-end text-@Html.GetLiquidazioneStatoCss((int)SediinPraticheRegionaliEnums.StatoLiqidazione.InLiquidazione) doubleunderline">@Model.ImportoInLiquidare.GetValueOrDefault().ToString("n")</td>
                    <td colspan="2"></td>
                </tr>
                <tr class="fw-bold">
                    <td colspan="2" class="text-end">Totale Importo da Liquidare</td>
                    <td class="text-end text-info doubleunderline">@Model.ImportoDaLiquidare.GetValueOrDefault().ToString("n")</td>
                    <td colspan="2"></td>
                </tr>
            </tfoot>
        </table>
    </div>


    @Html.PagingAjax(Model.PageSize, Model.CurrentPage, Model.TotalRecords,
        Url.Action("Ricerca"), Model.Filtri,
        new AjaxOptions
        {
            UpdateTargetId = "resultRicerca",
            HttpMethod = "post",
            OnFailure = "handleError"
        }, Url.Action("RicercaExcel"))

    <script>
        function onSuccessApriRichiesta(data) {

            if (data.isValid == false) {
                alertDanger(data.message);
            }
            else {
                showModalFullScreen_NoHeaderFooter(data);
                alertClose();
            }
        }
    </script>
}

