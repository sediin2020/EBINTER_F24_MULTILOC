@model Sediin.PraticheRegionali.WebUI.Areas.Backend.Models.LiquidazioneDaLiquidareRicercaViewModel
@using Sediin.PraticheRegionali.DOM
@using Sediin.PraticheRegionali.WebUI



@if (Model.TotalRecords == 0)
{
    @Html.AlertDanger("Nessuna Pratica trovata");
    return;
}
else
{

    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="text-center bg-dark text-white">
                    <th>
                        Liquida<br />
                        <small><a href="javascript:void(0)" onclick="selezionaTutti()">Seleziona tutti</a></small>
                    </th>
                    <th>Tipo richiesta</th>
                    <th>Rimborso</th>
                    <th>Data invio</th>
                    <th>Data conferma</th>
                    <th style="width:125px"></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.Result.ToList())
                {
                    <tr>
                        <td class="text-center" style="width:150px">

                            <div class="form-check form-switch mt-3">

                                @{
                                    bool selected = (Model.ListaPraticheLiquidazione.Where(x => x == item.PraticheRegionaliImpreseId).Count() > 0);
                                }

                                @Html.CheckBox("AggiungiRimuoviRichiesta", selected, new
                           {
                               @class = "form-check-input AggiungiRimuoviRichiesta",
                               style = "margin-left:auto",
                               data_crea_pratica_id = item.PraticheRegionaliImpreseId,
                           })

                            </div>

                        </td>

                        <td>
                            @if (item.TipoRichiesta.IsTipoRichiestaDipendente == true)
                            {
                                <label class="badge bg-1">Prestazioni Regionali Dipendenti</label>
                            }
                            else
                            {
                                <label class="badge bg-2">Prestazioni Regionali Aziende</label>

                            }
                            <br />


                            <div>
                                @if (item.TipoRichiesta != null)
                                {
                                    <h5 class="mt-1">
                                        @Html.Raw($"{item.TipoRichiesta.Descrizione} ({item.TipoRichiesta.Anno})")
                                    </h5>
                                }
                            </div>

                            @if (item.TipoRichiesta.IsTipoRichiestaDipendente == true)
                            {
                                <div>
                                    <strong class="mr-2">Dipendente:</strong>
                                    @if (item.Dipendente != null)
                                    {
                                        @Html.Raw($"{item.Dipendente.Nome} {item.Dipendente.Cognome} - {item.Dipendente.CodiceFiscale?.ToUpper()}");
                                    }
                                </div>
                            }

                            <div>
                                <strong class="mr-2">Ragione sociale:</strong>

                                @if (item.Azienda != null)
                                {
                                    @item.Azienda.RagioneSociale <span> - </span>@item.Azienda.MatricolaInps

                                    if (item.Azienda.Copertura == null || item.Azienda.Copertura.Count() == 0 || item.Azienda.Copertura.FirstOrDefault()?.Coperto == false)
                                    {
                                        <br />
                                        <i class="fas fa-exclamation-triangle mr-3 text-danger"></i><strong class="text-danger">L'azienda non risulta in regola con i contributi</strong>
                                    }

                                }


                            </div>

                            @if (item.Sportello != null)
                            {
                                <div>
                                    <strong class="mr-2">Consulente:</strong>

                                    @Html.Raw($"{item.Sportello.Nome} {item.Sportello.Cognome} - {item.Sportello.CodiceFiscalePIva?.ToUpper()}");

                                </div>
                            }


                        </td>

                        <td class="text-end">
                            @Html.ToImporto(item.ImportoContributoNetto)
                        </td>
                        <td class="text-center">
                            @Html.ToShortDate(item.DataInvio)
                            <br /><small>ora: @item.DataInvio.GetValueOrDefault().ToShortTimeString()</small>

                        </td>
                        <td class="text-center">
                            @Html.ToShortDate(item.DataConferma)

                            <br /><small>ora: @item.DataConferma.GetValueOrDefault().ToShortTimeString()</small>

                        </td>
                        <td class="text-center">

                            @Ajax.EncodedAjaxActionLink("Apri Richiesta", "ApriRichiesta", "Pratiche", new
                            {
                                id = item.PraticheRegionaliImpreseId
                            }, new AjaxOptions
                            {
                                OnBegin = "alertWaid()",
                                OnSuccess = "onSuccessApriRichiesta",
                                OnFailure = "handleError"
                            }, new { @class = "btn btn-sm btn-primary" })


                        </td>

                    </tr>
                }

            </tbody>

            <tfoot>

                <tr class="fw-bold">
                    <td colspan="2" class="text-end">Totale Importo da Liquidare</td>
                    <td class="text-end text-primary doubleunderline">@Model.ImportoDaLiquidare.GetValueOrDefault().ToString("n")</td>
                    <td colspan="2"></td>
                </tr>
                <tr class="fw-bold">
                    <td colspan="2" class="text-end">Totale Importo selezionata per Liquidazione</td>
                    <td class="text-end text-success doubleunderline">
                        <span id="resultListaPraticheLiquidazione">
                            @Model.ImportoListaPraticheLiquidazione.GetValueOrDefault().ToString("n")
                        </span>
                    </td>
                    <td colspan="2">
                    </td>
                </tr>
                <tr class="fw-bold">
                    <td colspan="2" class="text-end">Pratiche in lista</td>
                    <td class="text-end text-info">
                        <span id="resultListaPraticheLiquidazioneCount">
                            @Model.ListaPraticheLiquidazione.Count()
                        </span>
                    </td>
                    <td colspan="2" class="text-center">
                        <button @(Model.ListaPraticheLiquidazione.Count() == 0 ? "disabled" : "") data-liquidazione-button="true" class="btn btn-sm btn-danger" type="button" onclick="cancellaListaPraticheLiquidazione()">Cancella lista</button>
                        <button @(Model.ListaPraticheLiquidazione.Count() == 0 ? "disabled" : "") data-liquidazione-button="true" class="btn btn-sm btn-primary" type="button" onclick="creaListaPraticheLiquidazione()">Crea lista</button>

                    </td>
                </tr>

            </tfoot>
        </table>
    </div>

    @Html.PagingAjax(Model.PageSize, Model.CurrentPage, Model.TotalRecords,
        Url.Action("RicercaDaLiquidare"), Model.Filtri,
        new AjaxOptions
        {
            UpdateTargetId = "resultRicerca",
            HttpMethod = "post",
            OnFailure = "handleError"
        }, null)

    <script>
        function onSuccessApriRichiesta(data) {

            if (data.isValid == false) {
                alertDanger(data.message);
            }
            else {
                showModalFullScreen_NoHeaderFooter(data);
                alertClose();
            }
        }

        $(".AggiungiRimuoviRichiesta").on("click", function () {

            aggingiRimuovi($(this).data("crea-pratica-id"));
            if (!$(this).is(":checked")) {
                $(this).attr("checked", "checked");
            }
            else {
                $(this).removeAttr("checked");
            }
        });

        function selezionaTutti() {
            $.each($(".AggiungiRimuoviRichiesta"), function (index, item) {
                if (!$(item).is(":checked")) {
                    aggingiRimuovi($(item).data("crea-pratica-id"));
                    $(item).attr("checked", "checked");
                }
                else {
                    aggingiRimuovi($(item).data("crea-pratica-id"));
                    $(item).removeAttr("checked");
                }
            });
        }

        function aggingiRimuovi(id) {
            $.post("@Url.Action("AggiungiRimuoviRichiesta", "Liquidazione")", { id }, function (data) {

                //$(".AggiungiRimuoviRichiesta").data("[crea-pratica-id='" + id + "']").is(":checked");

                $("#resultListaPraticheLiquidazione").html(data.importo);
                $("#resultListaPraticheLiquidazioneCount").html(data.totali);

                if (data.totali == 0) {
                    $("[data-liquidazione-button]").attr("disabled", "disabled");
                }
                else {
                    $("[data-liquidazione-button]").removeAttr("disabled");
                }
            });
        }
    </script>
}

