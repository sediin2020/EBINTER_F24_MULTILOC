@model Sediin.PraticheRegionali.WebUI.Areas.Backend.Models.LiquidazioneViewModel

<h4>Dettaglio Liquidazione <strong class="text-primary">@Model.Liquidazione.LiquidazioneId.ToString().PadLeft(7, '0')</strong></h4>
<h5>
    <label class="badge bg-@Html.GetLiquidazioneStatoCss(Model.Liquidazione.StatoLiquidazioneId) text-start">
        @if (Model.Liquidazione.StatoLiquidazione != null)
        {
            @Model.Liquidazione.StatoLiquidazione.Descrizione
        }
    </label>
</h5>
<hr />



<div class="row">
    <div class="col-md-3">
        <label class="control-label">
            Data creazione
        </label>
        <div>
            @Html.ToShortDate(Model.Liquidazione.DataCreazione)
        </div>
    </div>
    <div class="col-md-3">
        <label class="control-label">
            Data lavorazione
        </label>
        <div>
            @Html.ToShortDate(Model.Liquidazione.DataLavorazione)
        </div>
    </div>
    <div class="col-md-3">
        <label class="control-label">
            Totale importo
        </label>
        <div>
            @{
                var _totaleimp = @Html.ToImporto(Model.Liquidazione?.LiquidazionePraticheRegionali?.Sum(x => x.PraticheRegionaliImprese.ImportoContributoNetto));
            }
            @_totaleimp
        </div>
    </div>

    <div class="col-md-3">
        <label class="control-label">
            Totale Pratiche
        </label>
        <div>
            @Model.Liquidazione.LiquidazionePraticheRegionali.Count()
        </div>
    </div>

    @if (Model.Liquidazione.StatoLiquidazioneId != (int)Sediin.PraticheRegionali.DOM.SediinPraticheRegionaliEnums.StatoLiqidazione.InLiquidazione)
    {
        if (!string.IsNullOrWhiteSpace(Model.Liquidazione.Allegato))
        {
            <div class="col-md-3">
                <label class="control-label">
                    Allegato
                </label>
                <div>
                    <a data-toggle="tooltip" title="Scarica allegato"
                       data-placement="top"
                       href='@Html.EncodedAction("DownloadAllegato", "Liquidazione", new { liquidazioneId=Model.Liquidazione.LiquidazioneId , area="Backend" })'
                       target="_blank">
                        <i class="fas fa-file-pdf text-info mr-3"></i>Scarica allegato
                    </a>
                </div>
            </div>
        }

        if (!string.IsNullOrWhiteSpace(Model.Liquidazione.Note))
        {
            <div class="col-md-12 mt-2">
                <label class="control-label">
                    Note
                </label>
                <div>
                    @Model.Liquidazione.Note
                </div>
            </div>
        }
    }

</div>

<hr />

@if (Model.Liquidazione.LiquidazionePraticheRegionali.Count() > 0)
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="text-center bg-dark text-white">
                    <th>Protocollo</th>
                    <th>Tipo richiesta</th>
                    <th>Rimborso</th>
                    <th>Data Invio</th>
                    <th>Data Conferma</th>

                    @if (Model.Liquidazione.StatoLiquidazioneId != (int)Sediin.PraticheRegionali.DOM.SediinPraticheRegionaliEnums.StatoLiqidazione.Annullata)
                    {
                        <th style="width:145px"></th>

                    }

                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.Liquidazione.LiquidazionePraticheRegionali)
                {
                    <tr>
                        <td class="text-center text-primary fw-bold">
                            @item.PraticheRegionaliImprese.ProtocolloId
                        </td>

                        <td>
                            @if (item.PraticheRegionaliImprese.TipoRichiesta.IsTipoRichiestaDipendente == true)
                            {
                                <label class="badge bg-1">Prestazioni Regionali Dipendenti</label>
                            }
                            else
                            {
                                <label class="badge bg-2">Prestazioni Regionali Aziende</label>

                            }
                            <br />


                            <div>
                                @if (item.PraticheRegionaliImprese.TipoRichiesta != null)
                                {
                                    <h5 class="mt-1">
                                        @Html.Raw($"{item.PraticheRegionaliImprese.TipoRichiesta.Descrizione} ({item.PraticheRegionaliImprese.TipoRichiesta.Anno})")
                                    </h5>
                                }
                            </div>

                            @if (item.PraticheRegionaliImprese.TipoRichiesta.IsTipoRichiestaDipendente == true)
                            {
                                <div>
                                    <strong class="mr-2">Dipendente:</strong>
                                    @if (item.PraticheRegionaliImprese.Dipendente != null)
                                    {
                                        @Html.Raw($"{item.PraticheRegionaliImprese.Dipendente.Nome} {item.PraticheRegionaliImprese.Dipendente.Cognome} - {item.PraticheRegionaliImprese.Dipendente.CodiceFiscale?.ToUpper()}");
                                    }
                                </div>
                            }

                            <div>
                                <strong class="mr-2">Ragione sociale:</strong>

                                @if (item.PraticheRegionaliImprese.Azienda != null)
                                {
                                    @item.PraticheRegionaliImprese.Azienda.RagioneSociale <span> - </span>@item.PraticheRegionaliImprese.Azienda.MatricolaInps

                                    if (item.PraticheRegionaliImprese.Azienda.Copertura == null || item.PraticheRegionaliImprese.Azienda.Copertura.Count() == 0 || item.PraticheRegionaliImprese.Azienda.Copertura.FirstOrDefault()?.Coperto == false)
                                    {
                                        <br />
                                        <i class="fas fa-exclamation-triangle mr-3 text-danger"></i><strong class="text-danger">L'azienda non risulta in regola con i contributi</strong>
                                    }

                                }


                            </div>

                            @if (item.PraticheRegionaliImprese.Sportello != null)
                            {
                                <div>
                                    <strong class="mr-2">Consulente:</strong>

                                    @Html.Raw($"{item.PraticheRegionaliImprese.Sportello.Nome} {item.PraticheRegionaliImprese.Sportello.Cognome} - {item.PraticheRegionaliImprese.Sportello.CodiceFiscalePIva?.ToUpper()}");

                                </div>
                            }


                        </td>

                        <td class="text-end">
                            @Html.ToImporto(item.PraticheRegionaliImprese.ImportoContributoNetto)
                        </td>
                        <td class="text-center">
                            @Html.ToShortDate(item.PraticheRegionaliImprese.DataInvio)
                            <br /><small>ora: @item.PraticheRegionaliImprese.DataInvio.GetValueOrDefault().ToShortTimeString()</small>

                        </td>
                        <td class="text-center">
                            @Html.ToShortDate(item.PraticheRegionaliImprese.DataConferma)

                            <br /><small>ora: @item.PraticheRegionaliImprese.DataConferma.GetValueOrDefault().ToShortTimeString()</small>

                        </td>


                        @if (Model.Liquidazione.StatoLiquidazioneId != (int)Sediin.PraticheRegionali.DOM.SediinPraticheRegionaliEnums.StatoLiqidazione.Annullata)
                        {
                            <td class="text-center">
                                <button class="btn btn-sm btn-danger" onclick="cancellaRigaLiquidazione(@item.PraticheRegionaliImpreseId)">

                                    @if (Model.Liquidazione.StatoLiquidazioneId == (int)Sediin.PraticheRegionali.DOM.SediinPraticheRegionaliEnums.StatoLiqidazione.Liquidata)
                                    {
                                        <span>Storna</span>
                                    }
                                    else
                                    {
                                        <span>Rimuovi</span>
                                    }

                                </button>
                            </td>
                        }
                    </tr>
                }

            </tbody>

        </table>
    </div>

}

else
{
    <div class="alert alert-warning">Non ci sono richieste da Liquidare</div>
}


<div class="row">

    <div class="col-md-12">
        <div class="modal-footer mt-4">
            <div class="col-md-12 text-center">
                @if (Model.Liquidazione.LiquidazionePraticheRegionali.Count() > 0 && Model.Liquidazione.StatoLiquidazioneId != (int)Sediin.PraticheRegionali.DOM.SediinPraticheRegionaliEnums.StatoLiqidazione.Annullata)
                {
                    <a href="@Html.EncodedAction("DownloadSepa", "Liquidazione", new { liquidazioneId = Model.Liquidazione.LiquidazioneId })"
                       target="_blank" class="btn btn-primary mr-1">Salva Sepa Xml</a>
                }

                @if (Model.Liquidazione.LiquidazionePraticheRegionali.Count() > 0)
                {

                    <a href="@Html.EncodedAction("LiquidazioneRichiesteExcel", "Liquidazione", new { liquidazioneId = Model.Liquidazione.LiquidazioneId })"
                       target="_blank" class="btn btn-info mr-1">Salva elenco dei richieste</a>

                }
                @if (Model.Liquidazione.StatoLiquidazioneId == (int)Sediin.PraticheRegionali.DOM.SediinPraticheRegionaliEnums.StatoLiqidazione.InLiquidazione)
                {
                    if (Model.Liquidazione.LiquidazionePraticheRegionali.Count() > 0)
                    {
                        @Ajax.EncodedAjaxActionLink("Imposta come Liquidata", "LavoraLiquidazione", "Liquidazione", new
                      {
                          liquidazioneId = Model.Liquidazione.LiquidazioneId
                      }, new AjaxOptions
                      {
                          OnBegin = "alertWaid()",
                          OnFailure = "handleError",
                          OnSuccess = "showModalOffcanvas('Imposta come Liquidata', data); alertClose()"
                      }, new { @class = "btn btn-success mr-1" })

                    }


                    @Ajax.EncodedAjaxActionLink("Imposta come Annullata", "AnnullaLiquidazione", "Liquidazione", new
                       {
                           liquidazioneId = Model.Liquidazione.LiquidazioneId
                       }, new AjaxOptions
                       {
                           OnBegin = "alertWaid()",
                           OnFailure = "handleError",
                           OnSuccess = "showModalOffcanvas('Imposta come Annullata', data); alertClose()"

                       }, new { @class = "btn btn-warning mr-1" })


                }


                @if (Model.Liquidazione.LiquidazionePraticheRegionali.Count() > 0 && Model.Liquidazione.StatoLiquidazioneId == (int)Sediin.PraticheRegionali.DOM.SediinPraticheRegionaliEnums.StatoLiqidazione.Liquidata)
                {
                    <button onclick="confermaInvioMailLiquidazione()" class="btn btn-success mr-1">Invia mail Aziende e Dipendenti</button>

                    <a href="@Html.EncodedAction("LiquidazioneRichiesteMailInviatiExcel", "Liquidazione", new { liquidazioneId = Model.Liquidazione.LiquidazioneId })"
                       target="_blank" class="btn btn-secondary mr-1">Elenco mail inviati</a>
                }

                <input type="button" value="Chiudi finestra" onclick="hideModal()" class="btn btn-danger" />
            </div>
        </div>
    </div>
</div>


@{ Html.RenderPartial("~/Areas/Backend/Views/Shared/_PartialModalOffcanvas.cshtml"); }

<script>
    function cancellaRigaLiquidazione(id) {

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success mr-1',
                cancelButton: 'btn btn-danger mr-1'
            },
            buttonsStyling: false
        });

        playNotifyConfirm();

        swalWithBootstrapButtons.fire({
        html: "Conferma per rimuove la Prestazione Regionale dalla Liquidazione?",
        icon: "question",
        showCancelButton: true,
        confirmButtonText: 'Conferma',
        cancelButtonText: 'Annulla',
        allowOutsideClick: false,
        allowEscapeKey: false
    }).then((result) => {
        if (result.isConfirmed) {
            alertWaid();
            $.post("@Html.EncodedAction("RimuoviRigaLiquidazione", "Liquidazione", new { liquidazioneId=Model.Liquidazione.LiquidazioneId })", { praticheRegionaliImpreseId:id}, function (data) {
                if (data.isValid == false) {
                    alertDanger(data.message);
                }
                else {
                    updateListRicerca();
                    $.get("@Html.EncodedAction("ApriLiquidazione", "Liquidazione", new { id=Model.Liquidazione.LiquidazioneId })", function (data1) {
                        alertSuccess(data.message);
                        showModalFullScreen_NoHeaderFooter(data1);
                    });
                }
            }).fail(function (error) { handleError(error) });
        }
    })
}

    function confermaInvioMailLiquidazione() {

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success mr-1',
                cancelButton: 'btn btn-danger mr-1'
            },
            buttonsStyling: false
        });

        playNotifyConfirm();

        swalWithBootstrapButtons.fire({
        html: "Conferma per invio mail a tutti utenti del bonifico?",
        icon: "question",
        showCancelButton: true,
        confirmButtonText: 'Conferma',
        cancelButtonText: 'Annulla',
        allowOutsideClick: false,
        allowEscapeKey: false
    }).then((result) => {
        if (result.isConfirmed) {
            alertWaid();
            $.get("@Html.EncodedAction("MailAvvenutoPagamento", "Liquidazione", new { liquidazioneId=Model.Liquidazione.LiquidazioneId })", function (data) {
                if (data.isValid == false) {
                    alertDanger(data.message);
                }
                else {
                    alertClose();
                }
            }).fail(function (error) { handleError(error) });
        }
    })
}

    @*function getSepa(data) {
        getXml(data.base64, 'Sepa_@Model.Liquidazione.LiquidazioneId.ToString().PadLeft(7, '0')');
        alertClose();
        toastInfo("Sepa Xml scaricato")
    }*@
</script>
