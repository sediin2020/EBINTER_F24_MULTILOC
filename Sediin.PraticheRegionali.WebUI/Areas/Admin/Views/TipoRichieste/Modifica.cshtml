@model Sediin.PraticheRegionali.DOM.Entitys.TipoRichiesta

@Scripts.Render("~/bundles/jqueryval")

@using (Ajax.BeginForm("Modifica", new AjaxOptions
{
    OnBegin = "alertWaid()",
    OnSuccess = "onSuccessModifica"
}))
{
    @Html.AntiForgeryToken()
    @Html.TextBoxFor(model => model.TipoRichiestaId, new { @hidden = true, @readonly = true })

    <div class="form-horizontal">
        <div class="row">

            <div class="form-group col-md-12">
                @Html.Label("Tipo richiesta", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Descrizione, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descrizione, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.Label("Modulo", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Modulo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Modulo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.Label("Anno", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Anno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Anno, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.Label("Descrizione", htmlAttributes: new { @class = "control-label" })
                <div>
                    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
                    <script src="~/Scripts/tinymce/langs/it.js"></script>
                    @Html.TextAreaFor(model => model.Note)
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    <script>
                        tinymce.init({
                            selector: '#Note',
                            width: 1008,
                            height: 450,
                            //plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect code',
                            toolbar: 'code | forecolor backcolor | undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat ',
                            promotion: false,
                            plugins: 'code',
                            language: 'it'
                        });
                    </script>
                </div>
            </div>

            <div class="form-group col-md-3">
                @Html.Label("Massimo richieste annue", htmlAttributes: new { @class = "control-label col-md-2", @style = "width:auto" })
                <div>
                    @Html.EditorFor(model => model.MaxRichiesteAnno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaxRichiesteAnno, "", new { @class = "text-danger" })
                </div>
            </div>


            @if (Model.IsTipoRichiestaDipendente == true)
            {
                <div class="form-group col-md-3">
                    @Html.Label("IBAN Azienda", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @if (Model.IbanAziendaRequired == null)
                        {
                            Model.IbanAziendaRequired = false;
                        }
                        @Html.CheckBoxFor(model => model.IbanAziendaRequired.Value, new { @style = "margin-bottom:30px", @Id = "IbanAziendaRequired", @Name = "IbanAziendaRequired" })
                    </div>
                </div>

                <div class="form-group col-md-3">
                    @Html.Label("IBAN Dipendente", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @if (Model.IbanDipendenteRequired == null)
                        {
                            Model.IbanDipendenteRequired = false;
                        }
                        @Html.CheckBoxFor(model => model.IbanDipendenteRequired.Value, new { @style = "margin-bottom:30px", @Id = "IbanDipendenteRequired", @Name = "IbanDipendenteRequired" })
                    </div>
                </div>

                <div class="form-group col-md-3">
                    @Html.Label("IBAN Titolare", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @if (Model.IbanTitolareRequired == null)
                        {
                            Model.IbanTitolareRequired = false;
                        }
                        @Html.CheckBoxFor(model => model.IbanTitolareRequired.Value, new { @style = "margin-bottom:30px", @Id = "IbanTitolareRequired", @Name = "IbanTitolareRequired" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group col-md-3">
                    @Html.Label("IBAN Azienda", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @if (Model.IbanAziendaRequired == null)
                        {
                            Model.IbanAziendaRequired = false;
                        }
                        @Html.CheckBoxFor(model => model.IbanAziendaRequired.Value, new { @style = "margin-bottom:30px", @Id = "IbanAziendaRequired", @Name = "IbanAziendaRequired" })
                    </div>
                </div>

                <div class="form-group col-md-3">
                    @Html.Label("IBAN Dipendente", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @if (Model.IbanDipendenteRequired == null)
                        {
                            Model.IbanDipendenteRequired = false;
                        }
                        @Html.CheckBoxFor(model => model.IbanDipendenteRequired.Value, new { @disabled = "disabled", @style = "margin-bottom:30px", @Id = "IbanDipendenteRequired", @Name = "IbanDipendenteRequired" })
                    </div>
                </div>

                <div class="form-group col-md-3">
                    @Html.Label("IBAN Titolare", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @if (Model.IbanTitolareRequired == null)
                        {
                            Model.IbanTitolareRequired = false;
                        }
                        @Html.CheckBoxFor(model => model.IbanTitolareRequired.Value, new { @style = "margin-bottom:30px", @Id = "IbanTitolareRequired", @Name = "IbanTitolareRequired" })
                    </div>
                </div>
            }

            <div class="form-group col-md-4">
                @Html.Label("Copertura per Matricola INPS", htmlAttributes: new { @class = "control-label" })
                <div>
                    @if (Model.CoperturaMatricolaInps == null)
                    {
                        Model.CoperturaMatricolaInps = false;
                    }
                    @Html.CheckBoxFor(model => model.CoperturaMatricolaInps.Value, new { @style = "margin-bottom:30px", @Id = "CoperturaMatricolaInps", @Name = "CoperturaMatricolaInps" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.Label("Abilitato per nuova richiesta", htmlAttributes: new { @class = "control-label" })
                <div>
                    @if (Model.AbilitatoNuovaRichiesta == null)
                    {
                        Model.AbilitatoNuovaRichiesta = false;
                    }

                    @Html.CheckBoxFor(model => model.AbilitatoNuovaRichiesta.Value, htmlAttributes: new { @style = "margin-bottom:30px", @Id = "AbilitatoNuovaRichiesta", @Name = "AbilitatoNuovaRichiesta" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.Label("Prestazioni Regionali Dipendenti", htmlAttributes: new { @class = "control-label" })
                <div>
                    @if (Model.IsTipoRichiestaDipendente == null)
                    {
                        Model.IsTipoRichiestaDipendente = false;
                    }

                    @Html.CheckBoxFor(model => model.IsTipoRichiestaDipendente.Value, htmlAttributes: new { @style = "margin-bottom:30px", @Id = "IsTipoRichiestaDipendente", @Name = "IsTipoRichiestaDipendente", @onchange = "disableenable()", @dataTipoRichiestaDipendente = "@Model.IsTipoRichiestaDipendente" })
                </div>
            </div>

        </div>


        <hr />
        <div class="row">


            <h4>
                <label class="badge bg-dark">
                    Richiedenti richiesta
                </label>

            </h4>

            <div class="form-group col-md-3">
                <label class="control-label">Richiedenti min.</label>
                <div>
                    @Html.EditorFor(model => model.RichiedenteMinimo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RichiedenteMinimo, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-3">
                <label class="control-label">Richiedenti max.</label>
                <div>
                    @Html.EditorFor(model => model.RichiedenteMassimo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RichiedenteMassimo, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group col-md-6">
                <label class="control-label">Intestazione richiedenti</label>
                <div>
                    @Html.EditorFor(model => model.RichiedenteTestoTitolo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RichiedenteTestoTitolo, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>

        <hr />
        <div class="row">

            <h4>
                <label class="badge bg-dark">
                    Contributo
                </label>

            </h4>

            <div class="form-group col-md-2">
                @Html.Label("Una Tantum", htmlAttributes: new { @class = "control-label" })
                <div>
                    @if (Model.UnaTantum == null)
                    {
                        Model.UnaTantum = false;
                    }

                    @Html.CheckBoxFor(model => model.UnaTantum.Value, htmlAttributes: new { @style = "margin-bottom:30px", @Id = "UnaTantum", @Name = "UnaTantum" })
                </div>
            </div>



            <div class="form-group col-md-3">
                <label class="control-label">Contributo Fisso (€)</label>
                <div>
                    @Html.EditorFor(model => model.ContributoFisso, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContributoFisso, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-3">
                <label class="control-label">Aliquota IRPEF %</label>
                <div>
                    @Html.EditorFor(model => model.AliquoteIRPEF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AliquoteIRPEF, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-3">
                <label class="control-label">Contributo sull importo %</label>
                <div>
                    @Html.EditorFor(model => model.ContributoPercentuale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContributoPercentuale, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-3">
                <label class="control-label">Importo Minimo (€)</label>
                <div>
                    @Html.EditorFor(model => model.ContributoImportoMinimo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContributoImportoMinimo, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group col-md-3">
                <label class="control-label">Importo Massimo (€)</label>
                <div>
                    @Html.EditorFor(model => model.ContributoImportoMassimo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContributoImportoMassimo, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-3">
                <label class="control-label">Budget Disponibile (€)</label>
                <div>
                    @Html.EditorFor(model => model.BudgetDisponibile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BudgetDisponibile, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>

        <div class="modal-footer row mt-4">
            <div class="col-md-12 text-center">
                <input type="submit" value="Modifica" class="btn btn-success" />
                <input type="button" value="Chiudi finestra" onclick="hideModal()" class="btn btn-danger" />
            </div>
        </div>
    </div>
}
<script>

    function disableenable() {

        if ($("[dataTipoRichiestaDipendente]").is(":checked")) {
            $(IbanDipendenteRequired).removeAttr("disabled");
        }
        else {
            $(IbanDipendenteRequired).attr("disabled", "disabled");
        }

    }


    function onSuccessModifica(data) {
        @Html.OnSuccessHideModal()
    }
</script>

<style>
    input[type=checkbox] {
        transform: scale(2);
        -ms-transform: scale(2);
        -webkit-transform: scale(2);
        margin-left: 7px;
    }
</style>