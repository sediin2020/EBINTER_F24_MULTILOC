@model List<FileInfo>

@if (Model?.Count() == 0)
{
    @Html.AlertDanger("Nessun backup trovato");
    return;
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="text-center bg-dark text-white">
                    <th>Nome</th>
                    <th>Data</th>
                    <th>Data</th>
                    <th style="width:150px"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderByDescending(x => x.CreationTime))
                {
                    long fileSizeibMbs = item.Length / (1024 * 1024);

                    <tr>
                        <td>@item.Name</td>
                        <td class="text-center">@item.CreationTime</td>
                        <td class="text-center">@fileSizeibMbs mb</td>
                        <td class="text-center">

                            <div class="dropdown">
                                <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Azioni
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Download", new { filename=item.Name})" target="_blank">Scarica</a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" onclick="eliminaBackup('@item.Name')"
                                           href="javascript:void(0)">Elimina</a>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

}

<script>
    function eliminaBackup(filename) {

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success mr-1',
                cancelButton: 'btn btn-danger mr-1'
            },
            buttonsStyling: false
        });

        playNotifyConfirm();

        swalWithBootstrapButtons.fire({
        html: "Sicuro di voler \"Eliminare\" il backup?",
        icon: "question",
        showCancelButton: true,
        confirmButtonText: 'Conferma',
        cancelButtonText: 'Annulla',
        allowOutsideClick: false,
        allowEscapeKey: false
    }).then((result) => {
        if (result.isConfirmed) {
            alertWaid();
            $.get("@Html.EncodedAction("Elimina", "Database")", { filename }, function (data) {
                alertSuccessNoCloseButton(data.message);
                setTimeout(function () { getListDatabaseBackup(); }, 1500);
            }).fail(function (error) {
                alertDanger("Si e verificato un errore");
            });
        }
    })
    }

</script>