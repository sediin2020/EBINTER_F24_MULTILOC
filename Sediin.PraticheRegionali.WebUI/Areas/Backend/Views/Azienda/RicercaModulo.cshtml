@model Sediin.PraticheRegionali.WebUI.Areas.Backend.Models.AziendaRicercaModel

@Scripts.Render("~/bundles/jqueryval")

@using (Ajax.BeginForm("Ricerca", new AjaxOptions
{
    UpdateTargetId = "resultRicerca",
    OnBegin = "onBeginRicerca",
    OnSuccess = "alertClose",
    OnFailure = "handleError"
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.AziendaRicercaModel_ComuneId)
    <div class="form-horizontal">

        <div class="row">

            <div class="col-md-8">
                <div class="form-group">
                    @Html.Label("Ragione Sociale", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.AziendaRicercaModel_RagioneSociale, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AziendaRicercaModel_RagioneSociale, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Comune", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @*@Html.DropDownListFor(model => model.AziendaRicercaModel_ComuneId, Html.SelectList(Model.Comuni.OrderBy(o => o.DENCOM), "ComuneId", "DENCOM", true), new { @class = "form-control" })*@
                        @Html.TextBoxFor(model => model.AziendaRicercaModel_Comune, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AziendaRicercaModel_ComuneId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>




        </div>

        <div class="row mt-1">

            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Codice Fiscale", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.AziendaRicercaModel_CodiceFiscale, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AziendaRicercaModel_CodiceFiscale, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Partita Iva", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.AziendaRicercaModel_PartitaIva, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AziendaRicercaModel_PartitaIva, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Matricola Inps", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.AziendaRicercaModel_MatricolaInps, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AziendaRicercaModel_MatricolaInps, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row mt-1">
            <div class="col-md-8">
                <div class="form-group">
                    @Html.Label("Tipologia", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.AziendaRicercaModel_TipologiaId, Html.SelectList(Model.Tipologie.OrderBy(o => o.Descrizione), "TipologiaId", "Descrizione", true), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AziendaRicercaModel_TipologiaId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("CSC", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.AziendaRicercaModel_CSC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AziendaRicercaModel_CSC, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        @{
            var _listOrderBy = new Dictionary<string, string>();
            _listOrderBy.Add("RagioneSociale", "Ragione sociale");
            _listOrderBy.Add("MatricolaInps", "Matricola Inps");
            _listOrderBy.Add("CSC", "CSC");
            _listOrderBy.Add("CodiceFiscale", "Codice Fiscale");
            _listOrderBy.Add("PartitaIva", "PartitaIva");

        }
        <div class="row mt-1">
            @{
                var _l = new List<SelectListItem>();
                _l.Add(new SelectListItem { Text = "Si", Value = "1" });
                _l.Add(new SelectListItem { Text = "No", Value = "0" });

            }

            @*<div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Azienda Coperta", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.AziendaRicercaModel_Coperta, Html.SelectList(_l, "Value", "Text", true), new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.AziendaRicercaModel_Coperta, "")
                    </div>
                </div>

            </div>*@


            @if (User.IsInRole(IdentityHelper.Roles.Admin.ToString()) ||
                 User.IsInRole(IdentityHelper.Roles.Super.ToString()))
            {

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.Label("Gestito da Consulente", htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">

                            @Html.DropDownListFor(model => model.AziendaRicercaModel_ConsulenteCS, Html.SelectList(_l, "Value", "Text", true), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AziendaRicercaModel_ConsulenteCS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }

            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Ordina per", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Ordine, Html.SelectListOrderBy(_listOrderBy), new { @class = "form-control" })
                    </div>
                </div>
            </div>

            @*<div class="col-md-4">

                    <div class="form-group">
                        @Html.Label("Righe da visualizzare", htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.PageSize, Html.SelectListPageSize(), new { @class = "form-control" })
                        </div>
                    </div>

                </div>*@
        </div>

        <hr />
        <div class="form-group text-center">
            <button type="submit" class="btn btn-primary">Avvia ricerca</button>
        </div>
    </div>
}


@Html.AutocompleteComuniAzienda("AziendaRicercaModel_Comune", "AziendaRicercaModel_ComuneId", "AziendaRicercaModel_ComuneId")

<script src="~/Scripts/unobtrusiveParseForm.js"></script>
<script src="~/Scripts/checksumCFPiva.js"></script>
