@model Sediin.PraticheRegionali.WebUI.Areas.Backend.Models.UtentiModificaPasswordViewModel

@using (Ajax.BeginForm("ModificaPassword", new AjaxOptions
{
    OnBegin = "onBeginModificaPassword",
    OnSuccess = "onSuccessModificaPassword",
    OnFailure="handleError"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordVecchia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordVecchia, new { htmlAttributes = new { @class = "form-control", type = "search" } })
                @Html.ValidationMessageFor(model => model.PasswordVecchia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordNuova, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordNuova, new { htmlAttributes = new { @class = "form-control", type = "search" } })
                @Html.ValidationMessageFor(model => model.PasswordNuova, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordNuovaRipedi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordNuovaRipedi, new { htmlAttributes = new { @class = "form-control", type = "search" } })
                @Html.ValidationMessageFor(model => model.PasswordNuovaRipedi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="modal-footer row mt-5">
            <div class="col-md-12 text-center">
                <input type="submit" value="Modifica Password" class="btn btn-success" />
                <input type="button" value="Chiudi finestra" onclick="hideModal()" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/passwordStrong.js"></script>
<script>
    $("#PasswordVecchia").on("focus", function () { $(this).attr("type", "password") });
    $("#PasswordNuova").on("focus", function () { $(this).attr("type", "password") });
    $("#PasswordNuovaRipedi").on("focus", function () { $(this).attr("type", "password") });

    function onBeginModificaPassword() {
        if ($("#PasswordVecchia").val() == $("#PasswordNuova").val()) {
            alertInfo("La Password nuova deve essere diversa dalla attuale Password");
            return false;
        }

        alertWaid();
    }

    function onSuccessModificaPassword(data) {
        if (data.isValid) {
            hideModal();
            alertInfo(data.message);
        }
        else {
            alertDanger(data.message);
        }
    }
</script>