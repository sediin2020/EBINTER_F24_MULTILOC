@model Sediin.PraticheRegionali.WebUI.Areas.Backend.Models.UtentiRicercaModel

@Scripts.Render("~/bundles/jqueryval")

@using (Ajax.BeginForm("Ricerca", new AjaxOptions
{
    UpdateTargetId = "resultRicerca",
    OnBegin = "onBeginRicerca",
    OnSuccess = "alertClose",
    OnFailure = "handleError"
}))
{
@Html.AntiForgeryToken()
<div class="form-horizontal">

    <div class="row">

        <div class="col-md-3">
            <div class="form-group">
                @Html.Label("Username", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.UtentiRicercaModel_Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UtentiRicercaModel_Username, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                @Html.Label("Ruolo", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">

                    @{
                        var _listRuoli = (from x in Html.GetRolesFriendlyName()
                        .Where(z=> z.Attivo == true).OrderBy(o => o.FriendlyName)
                                          select new SelectListItem
                                          {
                                              Text = x.FriendlyName,
                                              Value = x.Rolename
                                          });
                    }

                    @Html.DropDownListFor(model => model.UtentiRicercaModel_RuoId, Html.SelectList(_listRuoli, "Value", "Text", true), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UtentiRicercaModel_RuoId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                @Html.Label("Bloccato", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">

                    @{
                        var _l = new List<SelectListItem>();

                        _l.Add(new SelectListItem { Text = "Bloccato", Value = "1" });
                        _l.Add(new SelectListItem { Text = "Non Bloccato", Value = "0" });

                    }

                    @Html.DropDownListFor(model => model.UtentiRicercaModel_Bloccato, Html.SelectList(_l, "Value", "Text", true), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UtentiRicercaModel_Bloccato, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                @Html.Label("Email confermata", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @{
                        _l = new List<SelectListItem>();
                        _l.Add(new SelectListItem { Text = "Confermata", Value = "1" });
                        _l.Add(new SelectListItem { Text = "Non Confermata", Value = "0" });

                    }
                    @Html.DropDownListFor(model => model.UtentiRicercaModel_EmailConfermata, Html.SelectList(_l, "Value", "Text", true), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UtentiRicercaModel_EmailConfermata, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Email", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.UtentiRicercaModel_Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UtentiRicercaModel_Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



    </div>

    @*@{
            var _listOrderBy = new Dictionary<string, string>();
            _listOrderBy.Add("Username", "Username");
            _listOrderBy.Add("Email", "Email");

        }

        <div class="row mt-1">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Ordina per", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.UtentiRicercaModel_OrderBy, Html.SelectListOrderBy(_listOrderBy), new { @class = "form-control" })
                    </div>
                </div>


            </div>
        </div>*@


    <hr />
    <div class="form-group text-center">
        <button type="submit" class="btn btn-primary">Avvia ricerca</button>
    </div>
</div>

@Html.AutocompleteUtente("UtentiRicercaModel_Email", "UtentiRicercaModel_Username", "UtentiRicercaModel_Username")

}

