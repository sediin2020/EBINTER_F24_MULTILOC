@model Sediin.PraticheRegionali.WebUI.Areas.Backend.Models.SportelloRicercaModel

@Scripts.Render("~/bundles/jqueryval")

@using (Ajax.BeginForm("Ricerca", new AjaxOptions
{
    UpdateTargetId = "resultRicerca",
    OnBegin = "onBeginRicerca",
    OnSuccess = "alertClose",
    OnFailure = "handleError"
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.SportelloRicercaModel_ComuneId)

    <div class="form-horizontal">

        <div class="row">

            <div class="col-md-3">
                <div class="form-group">
                    @Html.Label("Tipo consulente", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">

                        @{
                            var _listRuoli = (from x in Html.GetRolesFriendlyName()
                                              .Where(z=> z.Attivo == true 
                                              && z.Rolename.StartsWith("sp_", StringComparison.OrdinalIgnoreCase))
                                              .OrderBy(o => o.FriendlyName)
                                              select new SelectListItem
                                              {
                                                  Text = x.FriendlyName,
                                                  Value = x.Rolename
                                              });
                        }

                        @Html.DropDownListFor(model => model.SportelloRicercaModel_Ruolo, Html.SelectList(_listRuoli, "Value", "Text", true), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SportelloRicercaModel_Ruolo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Ragione Sociale", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.SportelloRicercaModel_RagioneSociale, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SportelloRicercaModel_RagioneSociale, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.Label("Codice Fiscale / Partita Iva", htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.SportelloRicercaModel_CodiceFiscalePartitaIva, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SportelloRicercaModel_CodiceFiscalePartitaIva, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        @{ 
            var _listOrderBy = new Dictionary<string, string>();
            _listOrderBy.Add("RagioneSociale", "Ragione sociale");
            _listOrderBy.Add("CodiceFiscalePIva", "Codice Fiscale");
            _listOrderBy.Add("Ruolo", "Tipo consulente");
           
        }
    <div class="row mt-1">
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Comune", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @*@Html.DropDownListFor(model => model.SportelloRicercaModel_ComuneId, Html.SelectList(Model.Comuni.OrderBy(o => o.DENCOM), "ComuneId", "DENCOM", true), new { @class = "form-control" })*@
                    @Html.TextBoxFor(model => model.SportelloRicercaModel_Comune, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SportelloRicercaModel_ComuneId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Ordina per", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Ordine, Html.SelectListOrderBy(_listOrderBy), new { @class = "form-control" })
                </div>
            </div>


        </div>
        @*<div class="col-md-4">

            <div class="form-group">
                @Html.Label("Righe da visualizzare", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.PageSize, Html.SelectListPageSize(), new { @class = "form-control" })
                </div>
            </div>

        </div>*@
    </div>

        <hr />
        <div class="form-group text-center">
            <button type="submit" class="btn btn-primary">Avvia ricerca</button>
        </div>
    </div>
}

@Html.AutocompleteComuniSportello("SportelloRicercaModel_Comune", "SportelloRicercaModel_ComuneId", "SportelloRicercaModel_ComuneId")

<script src="~/Scripts/unobtrusiveParseForm.js"></script>
<script src="~/Scripts/checksumCFPiva.js"></script>
